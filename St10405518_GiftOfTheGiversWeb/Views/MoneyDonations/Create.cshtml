@model St10405518_GiftOfTheGiversWeb.Models.MoneyDonation
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Create Money Donation";
}

<div class="container my-5">
    <h1 class="display-5 mb-3">Create Money Donation</h1>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input asp-for="USERNAME" type="hidden" value="@UserManager.GetUserName(User)" />

                <div class="mb-3">
                    <label asp-for="DATE" class="form-label">Date</label>
                    <input asp-for="DATE" class="form-control" type="date" />
                    <span asp-validation-for="DATE" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="AMOUNT" class="form-label">Amount</label>
                    <input asp-for="AMOUNT" class="form-control" id="amountInput" />
                    <span asp-validation-for="AMOUNT" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="DONOR" class="form-label">Donor</label><br>
                    <label><input type="radio" name="DONOR" value="Anonymous"> Anonymous</label>
                    <span asp-validation-for="DONOR" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100">Create Donation</button>
            </form>
        </div>
    </div>

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("#amountInput").on("input", function () {
                var input = $(this).val();
                var pattern = /^\d+(\.\d{0,2})?$/; // Allows up to 2 decimals
                if (!pattern.test(input)) { $(this).val(""); }
            });
        });
    </script>
}
